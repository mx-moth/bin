#!/bin/bash
# Simple svn enhancement function
# Read more about it at: http://westhoffswelt.de

SVN="/usr/bin/svn"

operation=$1
shift

case "${operation}" in
	"status"|"stat"|"st")
		# My thanks for this snippet go to Kore Nordmann
		# (http://kore-nordmann.de)
		${SVN} ${operation} --ignore-externals "$@" | grep -v '^X' | sed -e 's/^ *[?].*$/[1;34m\0[m/' -e 's/^ *!.*$/[1;31m\0[m/' -e 's/^ *A.*$/[1;32m\0[m/' -e 's/^ *M.*$/[0;32m\0[m/' -e 's/^ *D.*$/[0;31m\0[m/' -e 's/^ *C.*$/[0;41m\0[m/'
	;;
	"diff"|"di")
		# The colordiff utility (http://colordiff.sourceforge.net) is
		# needed for this enhancement to work
		# Thanks to Lukas Kahwe Smith for the addition to
		# leave out whitespace changes
		# Thanks to Robin Speekenbrink for the hint to the -R
		# switch of less, which should fix problems some of
		# you might have with colorization.
		${SVN} ${operation} "$@" --diff-cmd `which diff` -x "-u -w"|colordiff|pager
	;;
	"update"|"up")
		# This snippet is taken from a blog post found on the net. My
		# thanks go out to the author of it.
		# http://woss.name/2007/02/01/display-svn-changelog-on-svn-up/
		# I have slightly modified it to better suit my needs.
		
		old_revision=`${SVN} info "$@" | awk '/^Revision:/ {print $2}'`
		first_update=$((${old_revision} + 1))
		
		${SVN} ${operation} "$@"
		
		new_revision=`${SVN} info "$@" | awk '/^Revision:/ {print $2}'`

		if [ ${new_revision} -gt ${old_revision} ]; then
			svn log -v -rHEAD:${first_update} "$@"
		else
			echo "No changes."
		fi

		echo "State of working tree:"
		svn status "$@"
	;;
	"log")
		${SVN} ${operation} "$@"|sed -e 's/^-\+$/[33m\0[m/' -e 's/^r\([0-9]\+\) | \([^|]\+\) | \([^|]\+\) | \(.\+\)$/[33m'\
'Revision: \1\n'\
'Author:   \2\n'\
'Time:     \3\n'\
'Changed:  \4[m/'
	;;
	"blame"|"praise"|"annotate"|"ann")
		${SVN} ${operation} "$@"|sed -e 's/^\(\s*[0-9]\+\s*\)\([^ ]\+\s*\)\(.*\)$/[1;32m\1[m[1;31m\2[m\3/'
	;;
	*)
		${SVN} ${operation} "$@"
	;;
esac
